# - name: create instance and route 53
#   hosts: local
#   connection: local
#   vars:
#     subnet_id: "subnet-00c431d71b9bb6eb1"
#     sg_id: "sg-0ba5d0c19c84f7409"
#     ami_id: "ami-09c813fb71547fc4f"
#     instances:
#     - mysql
#     - frontend
#     - backend
#     zone: chaitanyaproject.online


#   tasks:
#   - name: create ec2 instance
#     amazon.aws.ec2_instance:
#       name: "{{item}}"
#       vpc_subnet_id: "{{subnet_id}}"
#       instance_type: "t3.micro"
#       security_group: "{{sg_id}}"
#       image_id: "{{ami_id}}"

#     loop: "{{instances}}"
#     register: ec2_instances

#   - name: print the ec2 instance info
#     ansible.builtin.debug:
#       msg: "{{ec2_instances}}"

#   - name: creating route53
#     amazon.aws.route53:
#       state: present
#       zone: "{{zone}}"
#       record: "{{item.item}}.{{zone}}"
#       type: A
#       ttl: 1
#       value: "{{item.instances[0].private_ip_address}}"
#       wait: true
#       overwrite: true

#     loop: "{{ec2_instances.results}}"




- name: create ec2-instances
  hosts: local
  connection: local
  vars:
    subnet_id: "subnet-055daca6244ae8fb2"
    sg_id: "sg-0ba5d0c19c84f7409"
    ami_id: "ami-09c813fb71547fc4f"

    instances:
    - mysql
    - backened
    - frontend
  tasks:
  - name: create ec2 instance
    amazon.aws.ec2_instance:
      name: "{{item}}"
      vpc_subnet_id: "{{subnet_id}}"
      security_group: "{{sg_id}}"
      instance_type: t3.micro
      image_id: "{{ami_id}}"

    loop: "{{instances}}"
    register: ec2_instances



   

